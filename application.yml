openapi: 3.0.1
info:
  title: User Service System API
  description: API documentation for a service for creating, retrieving, updating, and deleting users.
  version: 1.0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /api/v1/userservice/users/{email}:
    get:
      tags:
        - user-controller
      summary: Retrieve an existing user
      operationId: getUserByEmail
      parameters:
        - name: email
          in: path
          description: User email
          required: true
          schema:
            type: string
      responses:
        '404':
          description: A user with the specified email does not exist
          content:
            '*/*':
              schema:
                type: object
        '200':
          description: User found
          content:
            '*/*':
              schema:
                type: object
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: object
    put:
      tags:
        - user-controller
      summary: Update an existing user
      operationId: updateUser
      parameters:
        - name: email
          in: path
          description: User email
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Users'
      responses:
        '404':
          description: A user with the specified email does not exist
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: string
        '204':
          description: The user was updated successfully
          content:
            '*/*':
              schema:
                type: string
    delete:
      tags:
        - user-controller
      summary: Delete an existing user
      operationId: deleteUser
      parameters:
        - name: email
          in: path
          description: User email
          required: true
          schema:
            type: string
      responses:
        '204':
          description: The user was deleted successfully
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: string
  /api/v1/userservice/users:
    post:
      tags:
        - user-controller
      summary: Creates a new user
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Users'
      responses:
        '201':
          description: The user was created successfully
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    Users:
      type: object
      required:
        - email
        - password
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string
          minLength: 0
          maxLength: 100
        password:
          type: string
        firstName:
          type: string
          minLength: 0
          maxLength: 50
          pattern: '^[A-Za-z ]*$'
        lastName:
          type: string
          minLength: 0
          maxLength: 100
          pattern: '^[A-Za-z ]*$'
