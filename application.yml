openapi: 3.0.1
info:
  title: User Service System API
  description: API documentation for a service for creating, retrieving, updating, and deleting users.
  version: 1.0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /api/v1/userservice/update/{email}:
    put:
      tags:
        - user-controller
      operationId: updateUser
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: string
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/userservice/register:
    post:
      tags:
        - user-controller
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: string
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/userservice/user/{email}:
    get:
      tags:
        - user-controller
      operationId: getUserByEmail
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: string
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /api/v1/userservice/list:
    get:
      tags:
        - user-controller
      operationId: getUser
      responses:
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: string
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /api/v1/userservice/delete/{email}:
    delete:
      tags:
        - user-controller
      operationId: deleteUser
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Bad Request
          content:
            '*/*':
              schema:
                type: string
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string
