openapi: 3.0.1
info:
  title: User Service System API
  description: API documentation for a service for creating, retrieving, updating, and deleting users.
  version: 1.0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /api/v1/userservice/update-user:
    put:
      tags:
        - user-controller
      operationId: updateUser
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
        - name: password
          in: query
          required: true
          schema:
            type: string
        - name: newEmail
          in: query
          required: false
          schema:
            type: string
        - name: newPassword
          in: query
          required: false
          schema:
            type: string
        - name: confirmNewPassword
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/userservice/create-user:
    post:
      tags:
        - user-controller
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDTO'
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/userservice/user:
    get:
      tags:
        - user-controller
      operationId: getUserByEmail
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/User'
  /api/v1/userservice/list:
    get:
      tags:
        - user-controller
      operationId: getUser
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /api/v1/userservice/delete:
    delete:
      tags:
        - user-controller
      operationId: deleteUser
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    UserDTO:
      type: object
      required:
        - confirmPassword
        - email
        - firstName
        - lastName
        - password
      properties:
        firstName:
          type: string
          minLength: 2
          maxLength: 50
          pattern: '^[A-Za-z ]+$'
        lastName:
          type: string
          minLength: 2
          maxLength: 50
          pattern: '^[A-Za-z ]+$'
        email:
          type: string
          minLength: 0
          maxLength: 100
        password:
          type: string
          minLength: 6
          maxLength: 15
        confirmPassword:
          type: string
    User:
      type: object
      required:
        - email
        - firstName
        - lastName
        - password
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
          minLength: 2
          maxLength: 50
          pattern: '^[A-Za-z ]+$'
        lastName:
          type: string
          minLength: 2
          maxLength: 50
          pattern: '^[A-Za-z ]+$'
        email:
          type: string
          minLength: 0
          maxLength: 100
        password:
          type: string
          minLength: 6
          maxLength: 15
